@using Newtonsoft.Json
@model IEnumerable<PixlArts.Models.Art>

@{
    ViewData["Title"] = "Pixel Art Gallery";
}

<style>
    body {
        font-family: 'Helvetica Neue', sans-serif;
        background-color: #3A3A3A;
        color: #eaeaea;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    h1 {
        font-size: 2.5rem;
        font-weight: 300;
        color: #fff;
        text-align: center;
        margin: 30px 0;
    }

    .page-container {
        flex: 1;
        width: 80%;
        margin: 0 auto;
    }

    .art-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 30px;
    }

        .art-table th, .art-table td {
            padding: 15px;
            text-align: center;
            vertical-align: middle;
        }

        .art-table th {
            border-bottom: 2px solid #444;
            font-weight: 600;
            color: #ccc;
            width: 33.33%;
        }

        .art-table td {
            border-bottom: 1px solid #333;
            color: #fff;
        }

        .art-table a {
            color: #66c2ff;
            text-decoration: none;
            padding: 6px 10px; /* Adjust padding to control button size */
            border-radius: 4px;
            background-color: #333;
            transition: background-color 0.3s ease, color 0.3s ease;
            display: block;
            margin: 5px auto; /* Center the button and add space between buttons */
            width: fit-content; /* Adjust width based on content */
        }

            .art-table a:hover {
                background-color: #444;
                color: #fff;
            }

    .pixel-art-grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        width: 350px; /* 5 x 50px */
        height: 350px;
        margin: 0 auto;
        border: 2px solid #444;
        background-color: #222;
    }

    .pixel-box {
        width: 100%;
        height: 100%;
        margin: 0;
    }

    .description-text {
        text-align: center;
        font-size: 1.2rem;
        color: #bbb;
    }

    .btn-create-art {
        display: block;
        width: fit-content; /* Adjust width based on content */
        margin: 20px auto;
        padding: 8px 16px; /* Adjust padding to control button size */
        text-align: center;
        background-color: #66c2ff;
        color: #1b1b1b;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-create-art:hover {
            background-color: #1b1b1b;
            color: #66c2ff;
        }

    footer {
        background-color: #2F2F2F;
        color: #fff;
        text-align: center;
        padding: 10px 0;
        margin-top: auto; /* Push footer to the bottom of the page */
    }
</style>

<div class="page-container">
    <h1>Pixel Art Gallery</h1>

    <p>
        <a class="btn-create-art" asp-action="Create">Create New</a>
    </p>

    <table class="art-table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    Pixel Art
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="description-text">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        <div class="pixel-art-grid">
                            @{
                                var pixelData = item.Pixels;
                                var pixels = new List<string>();

                                if (pixelData != null && pixelData.Length > 0)
                                {
                                    try
                                    {
                                        pixels = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(pixelData[0]);
                                    }
                                    catch
                                    {
                                        <p>Error: Unable to parse pixel data.</p>
                                    }
                                }

                                <script>
                                    console.log("Pixel Data for Art ID @item.Id:", @Html.Raw(JsonConvert.SerializeObject(pixels)));
                                </script>

                                if (pixels != null && pixels.Count == 25)
                                {
                                    for (int i = 0; i < pixels.Count; i++)
                                    {
                                        var color = pixels[i];
                                        <div class="pixel-box" style="background-color: @color;"></div>
                                    }
                                }
                                else
                                {
                                    <p>Error: Pixel data is invalid or empty.</p>
                                }
                            }
                        </div>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<footer>
    <br />
    <!-- Footer content goes here -->
</footer>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
